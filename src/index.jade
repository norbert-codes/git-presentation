doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Introducing Git

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Introducing Git
        img.gitlogo(src="images/git_icon.png")

      section
        h1 What is Git?
        ul
          li
          li
            h3 Git is a <a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control">Version Control System</a>

      section
        h2 What is "version control"?
        ul
          li
          li
            h3.emphasize Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.

      section
        h3 Just like a time machine
        img.bigsize(src="images/backtothefuture.gif")

      section
        h2 Why should I care?
        ul
          li
          li
            h3. It allows you to:
          li revert files back to a previous state
          li revert the entire project
          li compare changes over time
          li see who modified something that might be causing a problem
          li
            h4 generally, if you screw things up, you can easily recover
          li
            h4 <em>and of course you can't overwrite each others work</em>

      section.background.mindblown.emphatic-text
        h1.white OMG!!!

      section
        h2 How does this work?
        ul
          li
          li Git is a Distributed Version Control System, where clients don’t just check out the latest snapshot of the files: they fully mirror the repository.
          li If any server dies repositories can be copied back up to the server to restore it.
          
      section.background.distributed

      section
        h2 Snapshots baby!
        ul
          li
          li <strong>others:</strong> information as a list of file-based changes
          li <strong>Git:</strong> "set of snapshots of a miniature filesystem"
          li <small>Git takes a picture of what all your files look like at that moment and stores a reference to that snapshot. To be efficient, if files have not changed, Git doesn’t store the file again, just a link to the previous identical file it has already stored.</small>
          li
            img.snapshot(src="images/snapshots.png")

      section
        h2 <small>Nearly</small> every operation is local
        ul
          li
          li Remember? You have the whole database mirrored.
          li For example, to browse the history of the project.
          li You can see the changes introduced between the current version of a file and the file a month ago instantly.

      section
        h2 The three states
        ul
          li
          li <strong>comitted</strong> (safely stored in local database)
          li <strong>modified</strong> (you changed it, but not stored in database yet)
          li <strong>staged</strong> (changed and marked to be in next commit)
          li + <strong>pushed</strong> (copied to the remote repository from local database)
          li three main sections of a Git project: the Git directory, the working directory, and the staging area
          li
            img.snapshot(src="images/stages.png")

      section.background.git-puzzled
        h2.white You may feel like...


        //pre
        //  code.language-git.
        //    $ git push origin-master

    script(src='build/build.js')

